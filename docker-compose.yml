# docker-compose.yaml (at root of Athena-Project/)
version: '3.9'

services:
  db:
    image: postgres:15
    container_name: athena-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: athena_dev
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  athena-core:
    build:
      context: .
      dockerfile: athena/docker/athena-core.Dockerfile
    container_name: athena-core
    ports:
      - "50051:50051"
    depends_on:
      - db
    healthcheck:
      test: ["CMD-SHELL", "bash -lc 'ss -ltn | grep -q 50051'"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  athena-control-plane:
    build:
      context: .
      dockerfile: athena/docker/control-plane.Dockerfile
    container_name: athena-control-plane
    depends_on:
      - db
      - athena-core
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@db:5432/athena_dev"
      CORE_GRPC_HOST: "athena-core"
      CORE_GRPC_PORT: "50051"
      CONTROL_PLANE_LOG_LEVEL: "info"
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  athena-ui:
    build:
      context: ./athena-ui
      dockerfile: Dockerfile
    container_name: athena-ui
    depends_on:
      - athena-control-plane
    environment:
      NEXT_PUBLIC_API_URL: "http://athena-control-plane:8000"
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:3000 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

volumes:
  pgdata: